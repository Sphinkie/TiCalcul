<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="The ultimate Timecode Calculator" version="" project="tiCalcul">
    <namespace name="" status="active" access="public" module="ticalcul">
        <class name="Afficheur" href="afficheur.html" status="active" access="public" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="7" documented="true" module="tiCalcul" brief="La classe Afficheur gère un champ numérique de l'IHM QML">
            <function name="Afficheur" fullname="Afficheur::Afficheur" href="afficheur.html#Afficheur" status="active" access="public" documented="true" meta="constructor" noexcept="true" brief="Constructor. @param unit: L'unité correspondante à cet afficheur. @param parent: QObject parent: un Operande. Son nom va servir. **********************************************************************************************************" signature="Afficheur()"/>
            <function name="activeDisplay" fullname="Afficheur::activeDisplay" href="afficheur.html#activeDisplay" status="active" access="public" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="28" documented="true" meta="plain" type="void" brief="SLOT: Actualise la variable mIsActive en cas de changement" signature="void activeDisplay(int afficheur)">
                <parameter type="int" name="afficheur" default=""/>
            </function>
            <function name="addDigit" fullname="Afficheur::addDigit" href="afficheur.html#addDigit" status="active" access="private" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="21" documented="true" meta="plain" type="int" brief="Ajoute un digit à la fin de la chaine de caractères" signature="int addDigit(int digit)">
                <parameter type="int" name="digit" default=""/>
            </function>
            <function name="clearValue" fullname="Afficheur::clearValue" href="afficheur.html#clearValue" status="active" access="public" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="27" documented="true" meta="plain" type="void" brief="SLOT: Efface la valeur de l'afficheur, et ses variables privées" signature="void clearValue()"/>
            <function name="isIncorrect" fullname="Afficheur::isIncorrect" href="afficheur.html#isIncorrect" status="active" access="private" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="40" documented="true" meta="plain" type="bool" brief="Indique si le HMSI a besoin d'être rectifié, cad si minutes &gt; 59 ou secondes &gt; 59 ou images &gt; 24. @param raw_hmsi: un RAW HMSI du type HHMMSSII @returns true if HMSI needs to be rectified ***********************************************************************************************************" signature="bool isIncorrect(const int raw_hmsi)">
                <parameter type="const int" name="raw_hmsi" default=""/>
            </function>
            <function name="rectifyHMSI" fullname="Afficheur::rectifyHMSI" href="afficheur.html#rectifyHMSI" status="active" access="private" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="23" documented="true" meta="plain" type="int" brief="Cette fonction remet le HMSI de façon correcte. ***********************************************************************************************************" signature="int rectifyHMSI()"/>
            <function name="removeLastDigit" fullname="Afficheur::removeLastDigit" href="afficheur.html#removeLastDigit" status="active" access="private" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="22" documented="true" meta="plain" type="int" brief="Enlève un digit à la fin de la chaine de caractères. La nouvelle valeur pivot est envoyée à l'opérande. **********************************************************************************************************" signature="int removeLastDigit()"/>
            <function name="setDisplayValue" fullname="Afficheur::setDisplayValue" href="afficheur.html#setDisplayValue" status="active" access="private" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="39" documented="true" meta="plain" type="void" brief="Mémorise et propage la string à afficher vers le QML" signature="void setDisplayValue(const int value, const bool force)">
                <parameter type="const int" name="value" default=""/>
                <parameter type="const bool" name="force" default="false"/>
            </function>
            <function name="setFramerate" fullname="Afficheur::setFramerate" href="afficheur.html#setFramerate" status="active" access="public" location="afficheur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/afficheur.h" lineno="29" documented="true" meta="plain" type="void" brief="SLOT: Permet de changer dynamiquement le framerate des afficheurs HMSI" signature="void setFramerate(double framerate)">
                <parameter type="double" name="framerate" default=""/>
            </function>
        </class>
        <class name="Calculateur" href="calculateur.html" status="active" access="public" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="8" documented="true" module="tiCalcul" brief="La classe Calculateur est en charge de gérer les opérations entre les opérandes: addition, soustraction, complément. ***********************************************************************************************************">
            <function name="Calculateur" fullname="Calculateur::Calculateur" href="calculateur.html#Calculateur" status="active" access="public" documented="true" meta="constructor" noexcept="true" brief="Constructeur. @param tc1: premier opérande. @param tc2: second opérande. @param result: opérande résultat. @param parent: QObject parent. ************************************************************************************************************" signature="Calculateur()"/>
            <function name="add" fullname="Calculateur::add" href="calculateur.html#add" status="active" access="private" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="16" documented="true" meta="plain" type="int" brief="Calcule la somme TC1+TC2 et envoie le résultat à l'opérande Result. ************************************************************************************************************" signature="int add()"/>
            <function name="complement" fullname="Calculateur::complement" href="calculateur.html#complement" status="active" access="private" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="15" documented="true" meta="plain" type="int" brief="Calcule le complément à 24H de TC1 et envoie le résultat à l'opérande Result. ************************************************************************************************************" signature="int complement()"/>
            <function name="memorize" fullname="Calculateur::memorize" href="calculateur.html#memorize" status="active" access="private" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="19" documented="true" meta="plain" type="int" brief="Recopie la valeur du résultat dans l'opérande TC1. ************************************************************************************************************" signature="int memorize()"/>
            <function name="substract" fullname="Calculateur::substract" href="calculateur.html#substract" status="active" access="private" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="17" documented="true" meta="plain" type="int" brief="Calcule la différence TC1-TC2 et envoie le résultat à l'opérande Result. ************************************************************************************************************" signature="int substract()"/>
            <function name="swap" fullname="Calculateur::swap" href="calculateur.html#swap" status="active" access="private" location="calculateur.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/calculateur.h" lineno="18" documented="true" meta="plain" type="int" brief="Echange la valeur des opérandes TC1 et TC2. ************************************************************************************************************" signature="int swap()"/>
        </class>
        <class name="Converter" href="converter.html" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="6" documented="true" module="tiCalcul" brief="Classe statique contenant des fonctions de conversion de timecodes. *********************************************************************************">
            <function name="Converter" fullname="Converter::Converter" href="converter.html#Converter" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="28" documented="true" meta="constructor" brief="Constructeur. ***************************************************************************" signature="Converter()"/>
            <function name="HMSItoMicroseconds" fullname="Converter::HMSItoMicroseconds" href="converter.html#HMSItoMicroseconds" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="32" documented="true" meta="plain" static="true" type="int" brief="Convertit un HMSI (même incomplet) en un nombre de micro-secondes. Exemple: &quot;02:45:00:..&quot; pour 2h45m en 9900000000 us. @param hmsi : HMSI string to convert. @param framerate : le framerate utilisé dans le hmsi @return the value converted in microseconds. ****************************************************************************" signature="int HMSItoMicroseconds(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
            <function name="addSpaceSeparator" fullname="Converter::addSpaceSeparator" href="converter.html#addSpaceSeparator" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="30" documented="true" meta="plain" static="true" type="int" brief="Ajoute des séparateurs de milliers sur la partie entière et la partie décimale. @param value : a numeric value. @return a readable string with space separators. **************************************************************************" signature="int addSpaceSeparator(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="adjustLengthTo2" fullname="Converter::adjustLengthTo2" href="converter.html#adjustLengthTo2" status="active" access="private" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="50" documented="true" meta="plain" static="true" type="int" brief="Transforme une valeur en une string de 2 chars. Transforme 5 en &quot;05&quot;. * @param value : numeric value to complete. * @return the value completed with 0s (string size 2 chars). ***************************************************************************" signature="int adjustLengthTo2(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="adjustLengthTo3" fullname="Converter::adjustLengthTo3" href="converter.html#adjustLengthTo3" status="active" access="private" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="49" documented="true" meta="plain" static="true" type="int" brief="Transforme une valeur en une string de 3 chars. * Complète avec des zéro, et ne garde que les 3 chiffres les plus significatifs. *" signature="int adjustLengthTo3(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="completeRawHMSIWithDots" fullname="Converter::completeRawHMSIWithDots" href="converter.html#completeRawHMSIWithDots" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="34" documented="true" meta="plain" static="true" type="int" brief="Transforme &quot;123&quot; en &quot;12:3.:..:..&quot;. * @param raw_hmsi : raw hmsi to convert. * @return the hmsi formatted with : and dots. ***************************************************************************" signature="int completeRawHMSIWithDots(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="getNtscFramePerSec" fullname="Converter::getNtscFramePerSec" href="converter.html#getNtscFramePerSec" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="46" documented="true" meta="plain" static="true" type="double" brief="Retourne le framerate courant du NTSC. @return the current NTSC framerate. ***************************************************************************" signature="double getNtscFramePerSec()"/>
            <function name="microseconds" fullname="Converter::microseconds" href="converter.html#microseconds" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="38" documented="true" meta="plain" static="true" type="int" brief="Transforme une valeur numérique (ex: 1'234'000'000) en un texte (ex: &quot;1234000000&quot;). @param microsecs : microsecs value to convert. @return a readable string **************************************************************************" signature="int microseconds(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="microsecsToDHMSM" fullname="Converter::microsecsToDHMSM" href="converter.html#microsecsToDHMSM" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="42" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;0 days 00:20:34,000&quot;. @param microsecs : microsecs value to convert. @return a readable HMSI value with days (&quot;N days HH:MM:SS:II&quot;). ****************************************************************************" signature="int microsecsToDHMSM(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="microsecsToFrames" fullname="Converter::microsecsToFrames" href="converter.html#microsecsToFrames" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="36" documented="true" meta="plain" static="true" type="int" brief="Convertit un nombre de microsecondes en un nombre de frames (selon un certains framerate)" signature="int microsecsToFrames(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
            <function name="microsecsToHMSI" fullname="Converter::microsecsToHMSI" href="converter.html#microsecsToHMSI" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="39" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;00:20:34:00&quot;. @param microsecs : microsecs value to convert. vparam framerate : the framerate to use for the 2 last digits. @return a readable HMSI value (HH:MM:SS:II). **************************************************************************" signature="int microsecsToHMSI(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
            <function name="microsecsToHMSM" fullname="Converter::microsecsToHMSM" href="converter.html#microsecsToHMSM" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="40" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;00:20:34,000&quot;. @param microsecs : microsecs value to convert. @return a readable HMSm value (HH:MM:SS,mmm). **************************************************************************" signature="int microsecsToHMSM(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="microsecsToMillis" fullname="Converter::microsecsToMillis" href="converter.html#microsecsToMillis" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="37" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;1234000&quot;. @param microsecs : microsecs value to convert. @return the value converted in milliseconds, as a string. **************************************************************************" signature="int microsecsToMillis(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="microsecsToRawHMSI" fullname="Converter::microsecsToRawHMSI" href="converter.html#microsecsToRawHMSI" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="41" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;00203400&quot;. @param microsecs : microsecs value to convert. @param framerate : framerate for raw hmsi @return a raw HMSI value (&quot;HHMMSSII&quot;). ****************************************************************************" signature="int microsecsToRawHMSI(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
            <function name="microsecsToSeconds" fullname="Converter::microsecsToSeconds" href="converter.html#microsecsToSeconds" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="35" documented="true" meta="plain" static="true" type="int" brief="Transforme 1'234'000'000 en &quot;1234&quot;" signature="int microsecsToSeconds(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="rawHMSItoMicroseconds" fullname="Converter::rawHMSItoMicroseconds" href="converter.html#rawHMSItoMicroseconds" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="33" documented="true" meta="plain" static="true" type="int" brief="Convertit un Raw HMSI (même partiel) en un nombre de micro-secondes. * Exemple: &quot;0245&quot; pour 2h45m = 9 900 000 000 us. * @param hmsi : raw hmsi to convert. * @param framerate : the framerate used for raw hmsi * @return the value converted in microseconds. *****************************************************************************" signature="int rawHMSItoMicroseconds(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
            <function name="setNtscFramePerSec" fullname="Converter::setNtscFramePerSec" href="converter.html#setNtscFramePerSec" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="45" documented="true" meta="plain" static="true" type="void" brief="Change le framerate du NTSC. @param framerate : the new NTSC framerate. ****************************************************************************" signature="void setNtscFramePerSec(double framerate)">
                <parameter type="double" name="framerate" default=""/>
            </function>
            <function name="toMicroseconds" fullname="Converter::toMicroseconds" href="converter.html#toMicroseconds" status="active" access="public" location="converter.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/converter.h" lineno="43" documented="true" meta="plain" static="true" type="int" brief="Transforme une unité quelconque (string) en microsecondes (numerique)" signature="int toMicroseconds(int, double)">
                <parameter type="int" name="" default=""/>
                <parameter type="double" name="" default=""/>
            </function>
        </class>
        <class name="Operande" href="operande.html" status="active" access="public" location="operande.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/operande.h" lineno="12" documented="true" module="tiCalcul" brief="La class Operande gère la &quot;valeur pivot&quot; (cad en microsecondes) de l'opérande TC1 ou de TC2. ***********************************************************************************************************">
            <function name="clearValeurPivot" fullname="Operande::clearValeurPivot" href="operande.html#clearValeurPivot" status="active" access="private" location="operande.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/operande.h" lineno="21" documented="true" meta="plain" type="int" brief="SLOT : Vide la valeur pivot, et efface la valeur de tous les Afficheur" signature="int clearValeurPivot()"/>
            <function name="connectActiveDisplay" fullname="Operande::connectActiveDisplay" href="operande.html#connectActiveDisplay" status="active" access="private" location="operande.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/operande.h" lineno="20" documented="true" meta="plain" type="int" brief="Cree des connexions entre l'objet QML &quot;afficheurActif&quot; et tous les Afficheurs. Ainsi, lorsque l'Afficheur actif change, tous les afficheurs sont informés. engine: un pointeur sur le moteur QML. ***********************************************************************************************************" signature="int connectActiveDisplay(int *engine)">
                <parameter type="int *" name="engine" default=""/>
            </function>
            <function name="registerContext" fullname="Operande::registerContext" href="operande.html#registerContext" status="active" access="private" location="operande.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/operande.h" lineno="19" documented="true" meta="plain" type="void" brief="Enregistre les Afficheur dans le contexte QML, pour pouvoir les afficher" signature="void registerContext(int *context)">
                <parameter type="int *" name="context" default=""/>
            </function>
            <function name="valeurPivot" fullname="Operande::valeurPivot" href="operande.html#valeurPivot" status="active" access="private" location="operande.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/operande.h" lineno="18" documented="true" meta="plain" const="true" type="int" brief="Renvoie la valeur Pivot (en microsecondes). Returns the value in microseconds. ***********************************************************************************************************" signature="int valeurPivot() const"/>
        </class>
        <class name="Unites" href="unites.html" status="active" access="public" location="unites.h" filepath="D:/Mes Programmes/Windows/TiCalcul/Sources/unites.h" lineno="8" documented="true" module="tiCalcul" brief="Enumérés des différentes unités gérées par l'application. Pour chacune des unités, on a quelques infos utiles, telles que la valeur max affichable dans l'appli, le ratio de conversion, etc. ***************************************************************************"/>
        <module name="tiCalcul" href="ticalcul-module.html" status="internal" seen="false" title=""/>
    </namespace>
</INDEX>
